{"version":3,"sources":["components/Header.js","axios.js","components/TinderCards.js","components/SwipeButtons.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","instance","axios","create","baseURL","TinderCards","useState","people","setpeople","useEffect","a","get","req","data","fetchData","map","person","preventSwipe","onSwipe","dir","nameToDelete","name","console","log","onCardLeftScreen","style","backgroundImage","imgUrl","SwipeButtons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sUAqBeA,EAdA,WACX,OACI,sBAAKC,UAAU,SAAf,UACI,cAACC,EAAA,EAAD,UACA,cAAC,IAAD,CAAUC,SAAS,QAAQF,UAAU,mBAErC,qBAAKA,UAAU,eAAeG,IAAI,2GAA2GC,IAAI,KACjJ,cAACH,EAAA,EAAD,UACA,cAAC,IAAD,CAAmBC,SAAS,QAAQF,UAAU,uB,kECT3CK,E,OAJCC,EAAMC,OAAO,CACzBC,QAAQ,2CCuCGC,EArCK,WAAO,IAAD,EAEGC,mBAAS,IAFZ,mBAEfC,EAFe,KAERC,EAFQ,KAItBC,qBAAU,YACS,uCAAG,4BAAAC,EAAA,sEACER,EAAMS,IAAI,oBADZ,OACRC,EADQ,OAEdJ,EAAUI,EAAIC,MAFA,2CAAH,qDAIfC,KACF,IASF,OACI,qBAAKlB,UAAU,cAAf,SACI,qBAAKA,UAAU,8BAAf,SACKW,EAAOQ,KAAI,SAAAC,GACR,OACI,cAAC,IAAD,CAAYpB,UAAU,QAA0BqB,aAAc,CAAC,KAAK,QAASC,QAAS,SAAAC,GAAG,OAZrFC,EAYkGJ,EAAOK,UAX7HC,QAAQC,IAAI,aAAaH,GADhB,IAAWA,GAYgHI,iBAAkB,kBATxIH,EASuJL,EAAOK,UAR5KC,QAAQC,IAAI,aAAaF,GADZ,IAACA,GASE,SACI,qBAAKzB,UAAU,OAAO6B,MAAO,CAACC,gBAAgB,OAAD,OAAQV,EAAOW,OAAf,MAA7C,SACI,6BAAKX,EAAOK,UAFeL,EAAOK,c,6FCCnDO,EAtBM,WACjB,OACI,sBAAKhC,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,CAAYD,UAAU,uBAAtB,SACA,cAAC,IAAD,CAAYE,SAAS,YAErB,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACA,cAAC,IAAD,CAAWE,SAAS,YAEpB,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACA,cAAC,IAAD,CAAcE,SAAS,YAEvB,cAACD,EAAA,EAAD,CAAYD,UAAU,sBAAtB,SACA,cAAC,IAAD,CAAcE,SAAS,YAEvB,cAACD,EAAA,EAAD,CAAYD,UAAU,0BAAtB,SACA,cAAC,IAAD,CAAaE,SAAS,gBCPnB+B,MAXf,WACE,OAEE,cADA,CACA,OAAKjC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCASkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c88bcb96.chunk.js","sourcesContent":["\r\nimport \"../css/header.css\";\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ForumOutlinedIcon from '@material-ui/icons/ForumOutlined';\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <IconButton>\r\n            <FaceIcon fontSize=\"large\" className=\"header__icon\" />\r\n            </IconButton>\r\n            <img className=\"header__logo\" src=\"https://iconarchive.com/download/i108694/google/noto-emoji-people-family-love/12151-revolving-hearts.ico\" alt=\"\" /> \r\n            <IconButton>\r\n            <ForumOutlinedIcon fontSize=\"large\" className=\"header__icon\" />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import axios from \"axios\";\r\n\r\nconst instance= axios.create({\r\n    baseURL:\"https://turu-luv-backend.herokuapp.com\"\r\n})\r\n\r\nexport default instance;","import \"../css/tinderCards.css\";\r\nimport {useState,useEffect} from \"react\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport axios from \"../axios\"\r\n\r\nconst TinderCards = () => {\r\n    \r\n    const [people,setpeople]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchData = async()=>{\r\n            const req=await axios.get(\"/api/tinderCards\");\r\n            setpeople(req.data);\r\n        } \r\n        fetchData();\r\n    },[]);\r\n    \r\n    const swiped=(direction,nameToDelete)=>{\r\n        console.log(\"removing: \"+nameToDelete);\r\n    }\r\n    const outOfFrame=(name)=>{\r\n        console.log(\"removing: \"+name);\r\n    }\r\n\r\n    return (\r\n        <div className=\"tinderCards\">\r\n            <div className=\"tinderCards__cardContainder\" > \r\n                {people.map(person=>{\r\n                    return (\r\n                        <TinderCard className=\"swipe\" key={person.name} preventSwipe={[\"up\",\"down\"]} onSwipe={dir=>swiped(dir,person.name)} onCardLeftScreen={()=>outOfFrame(person.name)} >\r\n                            <div className=\"card\" style={{backgroundImage:`url(${person.imgUrl})`}} >\r\n                                <h3>{person.name}</h3>\r\n                            </div>\r\n                        </TinderCard>\r\n                    )\r\n                })}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TinderCards\r\n","import \"../css/swipeButtons.css\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\n\r\nconst SwipeButtons = () => {\r\n    return (\r\n        <div className=\"swipeButtons\">\r\n            <IconButton className=\"swipeButtons__repeat\" >\r\n            <ReplayIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons__left\" >\r\n            <CloseIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons__star\" >\r\n            <StarRateIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons__right\" >\r\n            <FavoriteIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons__lightning\" >\r\n            <FlashOnIcon fontSize=\"large\" />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwipeButtons\r\n","\nimport './App.css';\nimport Header from \"./components/Header\";\nimport TinderCards from \"./components/TinderCards\";\nimport SwipeButtons from \"./components/SwipeButtons\";\n\nfunction App() {\n  return (\n    // BEM class naming concention\n    <div className=\"app\">\n      <Header/>\n      <TinderCards/>\n      <SwipeButtons/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}